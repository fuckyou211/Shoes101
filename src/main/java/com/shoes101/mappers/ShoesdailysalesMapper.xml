<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shoes101.mapper.ShoesdailysalesMapper" >
  <resultMap id="BaseResultMap" type="com.shoes101.pojo.Shoesdailysales" >
    <id column="sdid" property="sdid" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="sales" property="sales" jdbcType="TIMESTAMP" />
    <result column="shoesid" property="shoesid" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shoesdailysales
    where sdid = #{sdid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shoes101.pojo.Shoesdailysales" >
    <selectKey resultType="java.lang.Integer" keyProperty="sdid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shoesdailysales (`date`, sales, shoesid
      )
    values (#{date,jdbcType=VARCHAR}, #{sales,jdbcType=TIMESTAMP}, #{shoesid,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.shoes101.pojo.Shoesdailysales" >
    update shoesdailysales
    set `date` = #{date,jdbcType=VARCHAR},
      sales = #{sales,jdbcType=TIMESTAMP},
      shoesid = #{shoesid,jdbcType=INTEGER}
    where sdid = #{sdid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select sdid, `date`, sales, shoesid
    from shoesdailysales
    where sdid = #{sdid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select sdid, `date`, sales, shoesid
    from shoesdailysales
  </select>
  <!--在 XML 中，一些字符拥有特殊的意义。
如果您把字符 "<" 放在 XML 元素中，会发生错误，这是因为解析器会把它当作新元素的开始。
这样会产生 XML 错误：
为了避免这个错误，用实体引用来代替 "<" 字符，如下：
  <message>if salary <1000 then</message> 需要改为<message>if salary &lt; 1000 then</message>-->
  <select id="getmonthsell" resultType="java.lang.Integer">
    select IFNULL(sum(totalprice),0) from shoesorder where buydate >= ${ym1} and buydate &lt; ${ym2}
  </select>
  <select id="getmonthorder" resultType="java.lang.Integer">
    select IFNULL(count(orderid),0) from shoesorder where buydate >= ${ym1} and buydate &lt; ${ym2} and validity = 1 and cancel = 0 and state = 3
  </select>
  <select id="getmonthregistuser" resultType="java.lang.Integer">
    select IFNULL(count(userid),0) from user where user.date >= ${ym1} and user.date &lt; ${ym2}
  </select>
  <select id="getDaySell" resultType="com.shoes101.vo.DaySellVo">
    select any_value(count(orderdetail.quantity)) as sell,substr(shoesorder.buydate,1,10) as dayy from shoesorder,orderdetail where shoesorder.buydate like ${ym1} group by substr(shoesorder.buydate,1,10)
  </select>
  <select id="getMonthSell" resultType="com.shoes101.vo.MonthSellVo">
   select any_value(sum(orderdetail.quantity)) as sell,month(buydate) as month,any_value(year(buydate)) from shoesorder INNER JOIN orderdetail on shoesorder.orderid = orderdetail.orderid GROUP BY month(buydate)
  </select>
  <select id="getYearSell" resultType="com.shoes101.vo.YearSellVo">
    select year(shoesorder.buydate),any_value(sum(orderdetail.quantity)) from shoesorder INNER JOIN orderdetail on shoesorder.orderid = orderdetail.orderid GROUP BY year(buydate)
  </select>
</mapper>